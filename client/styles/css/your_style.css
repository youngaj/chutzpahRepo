/*
 * It is advised not to edit the smartadmin_production.css
 * as this will override any changes you make in the
 * later versions of this theme.
 *
 * We advise that you use use this CSS to override
 * SmartAdmin styles.
 *
 * Rename the stylesheet to whatever your liking so it will stay
 * unique to you with each update of SmartAdmin.
 */

/*
 * INDEX
 *
 * - HTML
 * - BODY
 * - CUSTOM STYLES
 */
.red{
    color: darkred;
}

.blue{
    color: blue;
}

.yellow {
    color:#bf950d;
}

.green {
    color: green;
}

.white {
    color: lightgray;
}

.security-rule-list li{
    margin-left:50px;
}

.security-rule-list li:nth-child(even){
    background-color:#EEE
}

.myGrid {
    width: 100%;
    height: 800px;
  }

.fullWidth{
    width: 100%;
}

.wizardHeight{
    overflow-x:auto;
    height:400px;
    overflow:auto;
}

/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
.simpleDemo ul[dnd-list],
.simpleDemo ul[dnd-list] > li {
	position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.simpleDemo ul[dnd-list] {
    min-height: 42px;
    padding-left: 0;
    overflow-x:auto;
    height:400px;
    overflow:auto;
    background-color:silver
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.simpleDemo ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.simpleDemo ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.simpleDemo ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/**
 * Show selected elements in green
 */
.simpleDemo ul[dnd-list] li.selected {
    background-color: #dff0d8;
    color: #3c763d;
}

.modal {
  text-align: center;
  padding: 0!important;
  background:rgba(0,0,0,0.5);

}

.modal:before {
  content: '';
  display: inline-block;
  height: 100%;
  vertical-align: middle;
  margin-right: -4px;
}

.modal-dialog {
  display: inline-flex;
  text-align: left;
  vertical-align: middle;
}

.modalBg{
    background-color:black;
}

.jstree-default a {
    white-space: normal !important;
    height: auto;
}

.jstree-anchor {
    height: auto !important;
}

.jstree-default li > ins {
    vertical-align: top;
}

.jstree-leaf {
    height: auto;
}

    .jstree-leaf a {
        height: auto !important;
    }